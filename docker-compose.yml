services:
  redis:
    image: redis:latest
    container_name: redis
    ports:
      - "6379:6379"
    volumes:
      - ./volumes/redis/data:/data
    restart: always

  ollama:
    image: ollama/ollama:latest
    container_name: ollama
    ports:
      - 11434:11434
    pull_policy: always
    tty: true
    restart: unless-stopped
    volumes:
      - ./volumes/ollama/data:/data
    networks:
      - app_network
    
  open-webui:
    build:
      context: .
      args:
        OLLAMA_BASE_URL: '/ollama'
      dockerfile: Dockerfile
    image: ghcr.io/open-webui/open-webui:latest
    container_name: open-webui
    volumes:
      - ./volumes/open_webui/openwebui_models:/models  # 存储模型数据
      - ./volumes/open_webui/openwebui_configs:/configs  # 存储配置文件
      - ./volumes/open_webui/openwebui_cache:/cache  # 缓存数据
    depends_on:
      - ollama
    ports:
      - 3000:8080
    environment:
      - 'OLLAMA_BASE_URL=http://ollama:11434'
      - 'WEBUI_SECRET_KEY='
    extra_hosts:
      - host.docker.internal:host-gateway
    restart: unless-stopped
    networks:
      - app_network
  
  anythingllm_test:
    image: mintplexlabs/anythingllm:latest
    container_name: anythingllm_test
    ports:
      - "3002:3001" # 替換為你需要的端口
    cap_add:
      - SYS_ADMIN
    env_file:
      - ./env/anything_env.Dev.conf
    depends_on:
      - ollama
    volumes:
      - ./volumes/anythingllm_data_test:/app/server/storage
    restart: always
    networks:
      - app_network

  anythingllm:
    image: mintplexlabs/anythingllm:latest
    container_name: anythingllm
    ports:
      - "3001:3001"
    environment:
      STORAGE_DIR: "/app/server/storage"
    volumes:
      - ./volumes/anythingllm_data:/app/server/storage
    networks:
      - app_network

  nginx:
    image: nginx:latest
    container_name: nginx_proxy
    ports:
      - "80:80"
      - "443:443"
    volumes:
      - ./volumes/nginx/Test/nginx.conf:/etc/nginx/nginx.conf:ro
      - ./volumes/nginx/Test/ssl:/etc/nginx/ssl:ro
    depends_on:
      - anythingllm
      - ollama
    networks:
      - app_network

  postgres:
    image: postgres:latest  # 使用 Postgres 15 镜像
    container_name: postgres
    restart: always
    ports:
      - "5432:5432"  # 将容器的 5432 端口映射到主机
    environment:
      POSTGRES_USER: leon     # 数据库用户名
      POSTGRES_PASSWORD: 123456 # 数据库密码
      POSTGRES_DB: TestDb   # 数据库名称
    volumes:
      - ./volumes/postgresql/data:/var/lib/postgresql/data # 持久化存储
    networks:
      - app_network

  jenkins:
    image: jenkins/jenkins:lts
    container_name: jenkins
    ports:
      - "8080:8080"
    volumes:
      - ./volumes/jenkins_home:/var/jenkins_home
    environment:
      - JAVA_OPTS=-Duser.timezone=Asia/Taipei
    restart: always
    networks:
      - app_network

  elasticsearch:
    image: elasticsearch:8.17.1
    container_name: elasticsearch
    environment:
      - cluster.name=docker-cluster # 設定叢集名稱
      - node.name=elasticsearch # 設定節點名稱
      # - discovery.seed_hosts= # 設定多節點使用
      - cluster.initial_master_nodes=elasticsearch # 設定初始主節點
      - bootstrap.memory_lock=true # 鎖定記憶體，避免被交換出去
      - "ES_JAVA_OPTS=-Xms512m -Xmx512m" # 設定 JVM 記憶體
      - xpack.security.enabled=false
      # - xpack.security.transport.ssl.enabled=true
      # - xpack.security.http.ssl.enabled=true # 如果需要 HTTP 層的 SSL
    ulimits:
      memlock: # 鎖定記憶體
        soft: -1 # 設定-1代表不限制
        hard: -1 # 設定-1代表不限制
    volumes:
      - ./volumes/elasticsearch/data:/usr/share/elasticsearch/data # 將資料目錄掛載到主機
    ports:
      - 9200:9200 # 將 Elasticsearch HTTP 連接埠映射到主機
      - 9300:9300 # 將 Elasticsearch TCP 連接埠映射到主機
    networks:
      - app_network 

  logstash:
    image: logstash:8.17.1
    container_name: logstash
    volumes:
      - ./volumes/logstash/pipeline:/usr/share/logstash/pipeline # 掛載 Logstash 設定檔
    environment:
      - LOGSTASH_PIPELINE.workers=2 # 設定 Logstash 工作執行緒數量
      - LS_JAVA_OPTS=-Xms512m -Xmx512m
    depends_on:
      - elasticsearch # 依賴 Elasticsearch 服務
    ports:
      - 5044:5044 # 將 Logstash Beats 輸入連接埠映射到主機
      - "5000:5000/tcp"  # TCP input
      - "5000:5000/udp"
      - 9600:9600 # 將 Logstash HTTP 連接埠映射到主機
    networks:
      - app_network # 加入 app_network 網路

  kibana:
    image: kibana:8.17.1
    container_name: kibana
    environment:
      - ELASTICSEARCH_HOSTS=http://elasticsearch:9200 # 設定 Elasticsearch 主機
    depends_on:
      - elasticsearch # 依賴 Elasticsearch 服務
    ports:
      - 5601:5601 # 將 Kibana 連接埠映射到主機
    networks:
      - app_network # 加入 app_network 網路


networks:
  app_network:
    driver: bridge