services:
  redis:
    image: redis:latest
    container_name: redis
    ports:
      - "6379:6379"
    volumes:
      - ./volumes/redis/data:/data
    restart: always

  ollama:
    image: ollama/ollama:latest
    container_name: ollama
    ports:
      - 11434:11434
    pull_policy: always
    tty: true
    restart: unless-stopped
    volumes:
      - ./volumes/ollama/data:/data
    networks:
      - app_network
    
  open-webui:
    build:
      context: .
      args:
        OLLAMA_BASE_URL: '/ollama'
      dockerfile: Dockerfile
    image: ghcr.io/open-webui/open-webui:latest
    container_name: open-webui
    volumes:
      - ./volumes/open_webui/openwebui_models:/models  # 存储模型数据
      - ./volumes/open_webui/openwebui_configs:/configs  # 存储配置文件
      - ./volumes/open_webui/openwebui_cache:/cache  # 缓存数据
    depends_on:
      - ollama
    ports:
      - 3000:8080
    environment:
      - 'OLLAMA_BASE_URL=http://ollama:11434'
      - 'WEBUI_SECRET_KEY='
    extra_hosts:
      - host.docker.internal:host-gateway
    restart: unless-stopped
    networks:
      - app_network
  
  anythingllm_test:
    image: mintplexlabs/anythingllm:latest
    container_name: anythingllm_test
    ports:
      - "3002:3001" # 替換為你需要的端口
    cap_add:
      - SYS_ADMIN
    env_file:
      - ./env/anything_env.Dev.conf
    depends_on:
      - ollama
    volumes:
      - ./volumes/anythingllm_data_test:/app/server/storage
    restart: always
    networks:
      - app_network

  anythingllm:
    image: mintplexlabs/anythingllm:latest
    container_name: anythingllm
    ports:
      - "3001:3001"
    environment:
      STORAGE_DIR: "/app/server/storage"
    volumes:
      - ./volumes/anythingllm_data:/app/server/storage
    networks:
      - app_network

  nginx:
    image: nginx:latest
    container_name: nginx_proxy
    ports:
      - "80:80"
      - "443:443"
    volumes:
      - ./volumes/nginx/Test/nginx.conf:/etc/nginx/nginx.conf:ro
      - ./volumes/nginx/Test/ssl:/etc/nginx/ssl:ro
    depends_on:
      - anythingllm
      - ollama
    networks:
      - app_network

  postgres:
    image: postgres:latest  # 使用 Postgres 15 镜像
    container_name: postgres
    restart: always
    ports:
      - "5432:5432"  # 将容器的 5432 端口映射到主机
    environment:
      POSTGRES_USER: leon     # 数据库用户名
      POSTGRES_PASSWORD: 123456 # 数据库密码
      POSTGRES_DB: TestDb   # 数据库名称
    volumes:
      - ./volumes/postgresql/data:/var/lib/postgresql/data # 持久化存储
    networks:
      - app_network

  jenkins:
    image: jenkins/jenkins:lts
    container_name: jenkins
    ports:
      - "8080:8080"
    volumes:
      - ./volumes/jenkins_home:/var/jenkins_home
    environment:
      - JAVA_OPTS=-Duser.timezone=Asia/Taipei
    restart: always
    networks:
      - app_network

networks:
  app_network:
    driver: bridge